From b7e413e1e31dd3f15cbafad307b3aeb29438eb48 Mon Sep 17 00:00:00 2001
From: Martin Pitt <mpitt@debian.org>
Date: Tue, 9 Aug 2016 18:11:32 +0200
Subject: Add support for creating pid files.

Bug: http://www.cups.org/str.php?L2465

Last-Update: 2015-02-10

Patch-Name: pidfile.patch
---
 scheduler/conf.c      |  5 ++++-
 scheduler/conf.h      |  2 ++
 scheduler/main.c      | 38 ++++++++++++++++++++++++++++++++++++++
 test/run-stp-tests.sh |  1 +
 4 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/scheduler/conf.c b/scheduler/conf.c
index d7e3d472f..1bb7dcffa 100644
--- a/scheduler/conf.c
+++ b/scheduler/conf.c
@@ -163,7 +163,8 @@ static const cupsd_var_t	cupsfiles_vars[] =
 #ifdef HAVE_AUTHORIZATION_H
   { "SystemGroupAuthKey",	&SystemGroupAuthKey,	CUPSD_VARTYPE_STRING },
 #endif /* HAVE_AUTHORIZATION_H */
-  { "TempDir",			&TempDir,		CUPSD_VARTYPE_PATHNAME }
+  { "TempDir",			&TempDir,		CUPSD_VARTYPE_PATHNAME },
+  { "PidFile",			&PidFile,		CUPSD_VARTYPE_STRING }
 };
 
 static int		default_auth_type = CUPSD_AUTH_AUTO;
@@ -592,6 +593,7 @@ cupsdReadConfiguration(void)
   cupsdSetStringf(&ServerHeader, "CUPS/%d.%d IPP/2.1", CUPS_VERSION_MAJOR,
                   CUPS_VERSION_MINOR);
   cupsdSetString(&StateDir, CUPS_STATEDIR);
+  cupsdSetString(&PidFile, "/var/run/cups/cupsd.pid");
 
   if (!strcmp(CUPS_DEFAULT_PRINTCAP, "/etc/printers.conf"))
     PrintcapFormat = PRINTCAP_SOLARIS;
@@ -3429,6 +3431,7 @@ read_cupsd_conf(cups_file_t *fp)	/* I - File to read from */
              !_cups_strcasecmp(line, "SystemGroup") ||
              !_cups_strcasecmp(line, "SystemGroupAuthKey") ||
              !_cups_strcasecmp(line, "TempDir") ||
+             !_cups_strcasecmp(line, "PidFile") ||
 	     !_cups_strcasecmp(line, "User"))
     {
       cupsdLogMessage(CUPSD_LOG_INFO,
diff --git a/scheduler/conf.h b/scheduler/conf.h
index 585ba9203..b33768bce 100644
--- a/scheduler/conf.h
+++ b/scheduler/conf.h
@@ -245,6 +245,8 @@ VAR int			CreateSelfSignedCerts	VALUE(TRUE);
 VAR char		*ServerKeychain		VALUE(NULL);
 					/* Keychain holding cert + key */
 #endif /* HAVE_SSL */
+VAR char		*PidFile		VALUE(NULL);
+					/* Debian CUPS pid file */
 
 #ifdef HAVE_ONDEMAND
 VAR int			IdleExitTimeout		VALUE(60);
diff --git a/scheduler/main.c b/scheduler/main.c
index fce22d799..7a5e8b6b9 100644
--- a/scheduler/main.c
+++ b/scheduler/main.c
@@ -73,6 +73,8 @@ static void		service_checkin(void);
 static void		service_checkout(void);
 #endif /* HAVE_ONDEMAND */
 static void		usage(int status) __attribute__((noreturn));
+int			write_pid(void);
+int			remove_pid(void);
 
 
 /*
@@ -688,6 +690,11 @@ main(int  argc,				/* I - Number of command-line args */
     cupsdStartSystemMonitor();
 #endif /* __APPLE__ */
 
+  if (write_pid() == 0) {
+    cupsdLogMessage(CUPSD_LOG_ERROR, "Unable to write pid file");
+    return (1);
+  }
+
  /*
   * Send server-started event...
   */
@@ -1184,10 +1191,41 @@ main(int  argc,				/* I - Number of command-line args */
 
   cupsdStopSelect();
 
+  remove_pid();
+
   return (!stop_scheduler);
 }
 
 
+/* 'write_pid()' - Write PID file.
+   'remove_pid()' - Delete PID file.
+*/
+int
+write_pid()
+{
+  FILE *f;
+  int fd;
+  int pid;
+  if (((fd = open(PidFile, O_RDWR|O_CREAT, 0644)) == -1)
+      || ((f = fdopen(fd, "r+")) == NULL) ) {
+    return 0;
+  }
+  pid = getpid();
+  if (!fprintf(f, "%d\n", pid)) {
+    close(fd);
+    return 0;
+  }
+  fflush(f);
+  close(fd);
+
+  return pid;
+}
+
+int
+remove_pid() {
+  return unlink(PidFile);
+}
+
 /*
  * 'cupsdAddString()' - Copy and add a string to an array.
  */
diff --git a/test/run-stp-tests.sh b/test/run-stp-tests.sh
index bcc4fde64..345e8752b 100755
--- a/test/run-stp-tests.sh
+++ b/test/run-stp-tests.sh
@@ -524,6 +524,7 @@ FontPath $BASE/share/fonts
 DocumentRoot $root/doc
 RequestRoot $BASE/spool
 TempDir $BASE/spool/temp
+PidFile $BASE/cupsd.pid
 AccessLog $BASE/log/access_log
 ErrorLog $BASE/log/error_log
 PageLog $BASE/log/page_log
